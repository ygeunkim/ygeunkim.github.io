var searchData=
[
  ['ma_5frows_0',['ma_rows',['../structbvhar_1_1StructuralFit.html#a84394c34b81f801edc8bf142aa5b8702',1,'bvhar::StructuralFit']]],
  ['make_5funique_1',['make_unique',['../namespacestd.html#a03d5ca705e3360c607bf2586e9a9de3b',1,'std']]],
  ['mcmc_5fptr_2',['mcmc_ptr',['../classbvhar_1_1McmcRun.html#accafade6f7bceee9e274a7a0bb06829a',1,'bvhar::McmcRun']]],
  ['mcmc_5fstep_3',['mcmc_step',['../classbvhar_1_1McmcAlgo.html#abfe39f16561cc14e15415a2f95983a9e',1,'bvhar::McmcAlgo']]],
  ['mcmcalgo_4',['mcmcalgo',['../classbvhar_1_1McmcAlgo.html#a47717be95060b057bbf2db2bcf856915',1,'bvhar::McmcAlgo::McmcAlgo()'],['../classbvhar_1_1McmcAlgo.html',1,'bvhar::McmcAlgo']]],
  ['mcmcdl_5',['mcmcdl',['../classbvhar_1_1McmcDl.html',1,'bvhar::McmcDl&lt; BaseMcmc, isGroup &gt;'],['../classbvhar_1_1McmcDl.html#ae65bdac99dcc05fb401da5be24ccef96',1,'bvhar::McmcDl::McmcDl()']]],
  ['mcmcexpandforecastrun_6',['mcmcexpandforecastrun',['../classbvhar_1_1McmcExpandforecastRun.html#a945c81ffce0c76d3366d38b4b4f2ebce',1,'bvhar::McmcExpandforecastRun::McmcExpandforecastRun()'],['../classbvhar_1_1McmcExpandforecastRun.html',1,'bvhar::McmcExpandforecastRun&lt; BaseForecaster, isGroup, isUpdate &gt;'],['../classbvhar_1_1McmcExpandforecastRun.html#aa0dc5a09a1dd63c6876d8d64ff009c04',1,'bvhar::McmcExpandforecastRun::McmcExpandforecastRun()']]],
  ['mcmcforecaster_7',['mcmcforecaster',['../classbvhar_1_1McmcForecaster.html#af0b606826d2af9ac3cee143953a42f8d',1,'bvhar::McmcForecaster::McmcForecaster(const RegRecords &amp;records, int step, const Eigen::MatrixXd &amp;response_mat, int ord, bool include_mean, bool filter_stable, unsigned int seed, bool sv=true)'],['../classbvhar_1_1McmcForecaster.html#af0b606826d2af9ac3cee143953a42f8d',1,'bvhar::McmcForecaster::McmcForecaster(const RegRecords &amp;records, int step, const Eigen::MatrixXd &amp;response_mat, int ord, bool include_mean, bool filter_stable, unsigned int seed, bool sv=true)'],['../classbvhar_1_1McmcForecaster.html',1,'bvhar::McmcForecaster']]],
  ['mcmcforecastrun_8',['mcmcforecastrun',['../classbvhar_1_1McmcForecastRun.html',1,'bvhar::McmcForecastRun&lt; BaseForecaster &gt;'],['../classbvhar_1_1McmcForecastRun.html#a585dde0c72f1aadb390e82822ff58524',1,'bvhar::McmcForecastRun::McmcForecastRun(int num_chains, int lag, int step, const Eigen::MatrixXd &amp;response_mat, bool sparse, double level, Rcpp::List &amp;fit_record, const Eigen::VectorXi &amp;seed_chain, bool include_mean, bool stable, int nthreads, bool sv=true)'],['../classbvhar_1_1McmcForecastRun.html#a2450e4dd5deed4e0393ce4537562c3d5',1,'bvhar::McmcForecastRun::McmcForecastRun(int num_chains, int week, int month, int step, const Eigen::MatrixXd &amp;response_mat, bool sparse, double level, Rcpp::List &amp;fit_record, const Eigen::VectorXi &amp;seed_chain, bool include_mean, bool stable, int nthreads, bool sv=true)'],['../classbvhar_1_1McmcForecastRun.html#a2e595fb8107a11bd5b59d190f9386608',1,'bvhar::McmcForecastRun::McmcForecastRun(int num_chains, int month, int step, const Eigen::MatrixXd &amp;response_mat, const Eigen::MatrixXd &amp;har_trans, bool sparse, double level, Rcpp::List &amp;fit_record, const Eigen::VectorXi &amp;seed_chain, bool include_mean, bool stable, int nthreads, bool sv=true)'],['../classbvhar_1_1McmcForecastRun.html#a2450e4dd5deed4e0393ce4537562c3d5',1,'bvhar::McmcForecastRun::McmcForecastRun(int num_chains, int week, int month, int step, const Eigen::MatrixXd &amp;response_mat, bool sparse, double level, Rcpp::List &amp;fit_record, const Eigen::VectorXi &amp;seed_chain, bool include_mean, bool stable, int nthreads, bool sv=true)'],['../classbvhar_1_1McmcForecastRun.html#a585dde0c72f1aadb390e82822ff58524',1,'bvhar::McmcForecastRun::McmcForecastRun(int num_chains, int lag, int step, const Eigen::MatrixXd &amp;response_mat, bool sparse, double level, Rcpp::List &amp;fit_record, const Eigen::VectorXi &amp;seed_chain, bool include_mean, bool stable, int nthreads, bool sv=true)'],['../classbvhar_1_1McmcForecastRun.html#a2e595fb8107a11bd5b59d190f9386608',1,'bvhar::McmcForecastRun::McmcForecastRun(int num_chains, int month, int step, const Eigen::MatrixXd &amp;response_mat, const Eigen::MatrixXd &amp;har_trans, bool sparse, double level, Rcpp::List &amp;fit_record, const Eigen::VectorXi &amp;seed_chain, bool include_mean, bool stable, int nthreads, bool sv=true)']]],
  ['mcmcgdp_9',['mcmcgdp',['../classbvhar_1_1McmcGdp.html',1,'bvhar::McmcGdp&lt; BaseMcmc &gt;'],['../classbvhar_1_1McmcGdp.html#a9f539a674a54c4acb07e584a67ff9910',1,'bvhar::McmcGdp::McmcGdp()']]],
  ['mcmchierminn_10',['mcmchierminn',['../classbvhar_1_1McmcHierminn.html',1,'bvhar::McmcHierminn&lt; BaseMcmc &gt;'],['../classbvhar_1_1McmcHierminn.html#aae994c9dc2c77c78c58fe2791e0f9218',1,'bvhar::McmcHierminn::McmcHierminn()']]],
  ['mcmchorseshoe_11',['mcmchorseshoe',['../classbvhar_1_1McmcHorseshoe.html#a8c86e8bcc1f1804b848b3070ac26c100',1,'bvhar::McmcHorseshoe::McmcHorseshoe()'],['../classbvhar_1_1McmcHorseshoe.html',1,'bvhar::McmcHorseshoe&lt; BaseMcmc, isGroup &gt;']]],
  ['mcmcminn_12',['mcmcminn',['../classbvhar_1_1McmcMinn.html#aca48127057e03226f62abb7e78254db1',1,'bvhar::McmcMinn::McmcMinn()'],['../classbvhar_1_1McmcMinn.html',1,'bvhar::McmcMinn&lt; BaseMcmc &gt;']]],
  ['mcmcmniw_13',['mcmcmniw',['../classbvhar_1_1McmcMniw.html',1,'bvhar::McmcMniw'],['../classbvhar_1_1McmcMniw.html#a77a69c0df3121ba550c9af7d7814433d',1,'bvhar::McmcMniw::McmcMniw()']]],
  ['mcmcng_14',['mcmcng',['../classbvhar_1_1McmcNg.html#ac34ac3583df8468e94b2f3be9aaeb3ea',1,'bvhar::McmcNg::McmcNg()'],['../classbvhar_1_1McmcNg.html',1,'bvhar::McmcNg&lt; BaseMcmc, isGroup &gt;']]],
  ['mcmcoutforecastinterface_15',['McmcOutforecastInterface',['../classbvhar_1_1McmcOutforecastInterface.html',1,'bvhar']]],
  ['mcmcoutforecastinterface_3c_20regforecaster_20_3e_16',['McmcOutforecastInterface&lt; RegForecaster &gt;',['../classbvhar_1_1McmcOutforecastInterface.html',1,'bvhar']]],
  ['mcmcoutforecastrun_17',['mcmcoutforecastrun',['../classbvhar_1_1McmcOutforecastRun.html#a8e5195734e8e56f316ffbb0926b899e9',1,'bvhar::McmcOutforecastRun::McmcOutforecastRun(const Eigen::MatrixXd &amp;y, int lag, int num_chains, int num_iter, int num_burn, int thin, bool sparse, double level, Rcpp::List &amp;fit_record, Rcpp::List &amp;param_reg, Rcpp::List &amp;param_prior, Rcpp::List &amp;param_intercept, Rcpp::List &amp;param_init, int prior_type, const Eigen::VectorXi &amp;grp_id, const Eigen::VectorXi &amp;own_id, const Eigen::VectorXi &amp;cross_id, const Eigen::MatrixXi &amp;grp_mat, bool include_mean, bool stable, int step, const Eigen::MatrixXd &amp;y_test, bool get_lpl, const Eigen::MatrixXi &amp;seed_chain, const Eigen::VectorXi &amp;seed_forecast, bool display_progress, int nthreads, bool sv=true)'],['../classbvhar_1_1McmcOutforecastRun.html#a33da75070ebdf12fe0734c0de5a27a5e',1,'bvhar::McmcOutforecastRun::McmcOutforecastRun(const Eigen::MatrixXd &amp;y, int lag, int num_chains, int num_iter, int num_burn, int thin, bool sparse, double level, Rcpp::List &amp;fit_record, Rcpp::List &amp;param_reg, Rcpp::List &amp;param_prior, Rcpp::List &amp;param_intercept, Rcpp::List &amp;param_init, int prior_type, Rcpp::List &amp;contem_prior, Rcpp::List &amp;contem_init, int contem_prior_type, const Eigen::VectorXi &amp;grp_id, const Eigen::VectorXi &amp;own_id, const Eigen::VectorXi &amp;cross_id, const Eigen::MatrixXi &amp;grp_mat, bool include_mean, bool stable, int step, const Eigen::MatrixXd &amp;y_test, bool get_lpl, const Eigen::MatrixXi &amp;seed_chain, const Eigen::VectorXi &amp;seed_forecast, bool display_progress, int nthreads, bool sv=true)'],['../classbvhar_1_1McmcOutforecastRun.html',1,'bvhar::McmcOutforecastRun&lt; BaseForecaster, isUpdate &gt;']]],
  ['mcmcoutforecastrun_3c_20regforecaster_2c_20true_20_3e_18',['McmcOutforecastRun&lt; RegForecaster, true &gt;',['../classbvhar_1_1McmcOutforecastRun.html',1,'bvhar']]],
  ['mcmcparams_19',['mcmcparams',['../structbvhar_1_1McmcParams.html#a464740d79fc0b7523a66ec97cfb2381a',1,'bvhar::McmcParams::McmcParams()'],['../structbvhar_1_1McmcParams.html',1,'bvhar::McmcParams']]],
  ['mcmcreg_20',['mcmcreg',['../classbvhar_1_1McmcReg.html#a6cf2340b2cfd18e92854cd15bd893d77',1,'bvhar::McmcReg::McmcReg(const RegParams &amp;params, const LdltInits &amp;inits, unsigned int seed)'],['../classbvhar_1_1McmcReg.html#a201095182d5fe885bc440f2a3dd2c2ff',1,'bvhar::McmcReg::McmcReg(const RegParams &amp;params, const LdltInits &amp;inits, std::unique_ptr&lt; ShrinkageUpdater &gt; &amp;coef_prior, std::unique_ptr&lt; ShrinkageUpdater &gt; &amp;contem_prior, unsigned int seed)'],['../classbvhar_1_1McmcReg.html',1,'bvhar::McmcReg']]],
  ['mcmcrollforecastrun_21',['mcmcrollforecastrun',['../classbvhar_1_1McmcRollforecastRun.html',1,'bvhar::McmcRollforecastRun&lt; BaseForecaster, isGroup, isUpdate &gt;'],['../classbvhar_1_1McmcRollforecastRun.html#a7c1c0a70396c0f8b90746f4d26e3af91',1,'bvhar::McmcRollforecastRun::McmcRollforecastRun(const Eigen::MatrixXd &amp;y, int lag, int num_chains, int num_iter, int num_burn, int thin, bool sparse, double level, Rcpp::List &amp;fit_record, Rcpp::List &amp;param_reg, Rcpp::List &amp;param_prior, Rcpp::List &amp;param_intercept, Rcpp::List &amp;param_init, int prior_type, const Eigen::VectorXi &amp;grp_id, const Eigen::VectorXi &amp;own_id, const Eigen::VectorXi &amp;cross_id, const Eigen::MatrixXi &amp;grp_mat, bool include_mean, bool stable, int step, const Eigen::MatrixXd &amp;y_test, bool get_lpl, const Eigen::MatrixXi &amp;seed_chain, const Eigen::VectorXi &amp;seed_forecast, bool display_progress, int nthreads, bool sv=true)'],['../classbvhar_1_1McmcRollforecastRun.html#a36e5bdac5b2aefe2d9bf9f46ffb181da',1,'bvhar::McmcRollforecastRun::McmcRollforecastRun(const Eigen::MatrixXd &amp;y, int lag, int num_chains, int num_iter, int num_burn, int thin, bool sparse, double level, Rcpp::List &amp;fit_record, Rcpp::List &amp;param_reg, Rcpp::List &amp;param_prior, Rcpp::List &amp;param_intercept, Rcpp::List &amp;param_init, int prior_type, Rcpp::List &amp;contem_prior, Rcpp::List &amp;contem_init, int contem_prior_type, const Eigen::VectorXi &amp;grp_id, const Eigen::VectorXi &amp;own_id, const Eigen::VectorXi &amp;cross_id, const Eigen::MatrixXi &amp;grp_mat, bool include_mean, bool stable, int step, const Eigen::MatrixXd &amp;y_test, bool get_lpl, const Eigen::MatrixXi &amp;seed_chain, const Eigen::VectorXi &amp;seed_forecast, bool display_progress, int nthreads, bool sv=true)']]],
  ['mcmcrun_22',['mcmcrun',['../classbvhar_1_1McmcRun.html#ad7db6d048904e6092f1feb4ed009d538',1,'bvhar::McmcRun::McmcRun()'],['../classbvhar_1_1McmcRun.html',1,'bvhar::McmcRun']]],
  ['mcmcspillover_23',['mcmcspillover',['../classbvhar_1_1McmcSpillover.html#a904bbd8030cea3a19365b62da7ec30ec',1,'bvhar::McmcSpillover::McmcSpillover(const RegRecords &amp;records, int lag_max, int ord, int dim, int id=-1)'],['../classbvhar_1_1McmcSpillover.html#a904bbd8030cea3a19365b62da7ec30ec',1,'bvhar::McmcSpillover::McmcSpillover(const RegRecords &amp;records, int lag_max, int ord, int dim, int id=-1)'],['../classbvhar_1_1McmcSpillover.html',1,'bvhar::McmcSpillover']]],
  ['mcmcspilloverrun_24',['mcmcspilloverrun',['../classbvhar_1_1McmcSpilloverRun.html',1,'bvhar::McmcSpilloverRun&lt; RecordType &gt;'],['../classbvhar_1_1McmcSpilloverRun.html#a4349a6c7b01a1baa8f7207f48c52281b',1,'bvhar::McmcSpilloverRun::McmcSpilloverRun(int week, int month, int step, Rcpp::List &amp;fit_record, bool sparse)'],['../classbvhar_1_1McmcSpilloverRun.html#ac445491b0121254bc8d5356ef11fc6ce',1,'bvhar::McmcSpilloverRun::McmcSpilloverRun(int lag, int step, Rcpp::List &amp;fit_record, bool sparse)'],['../classbvhar_1_1McmcSpilloverRun.html#a4349a6c7b01a1baa8f7207f48c52281b',1,'bvhar::McmcSpilloverRun::McmcSpilloverRun(int week, int month, int step, Rcpp::List &amp;fit_record, bool sparse)'],['../classbvhar_1_1McmcSpilloverRun.html#ac445491b0121254bc8d5356ef11fc6ce',1,'bvhar::McmcSpilloverRun::McmcSpilloverRun(int lag, int step, Rcpp::List &amp;fit_record, bool sparse)']]],
  ['mcmcssvs_25',['mcmcssvs',['../classbvhar_1_1McmcSsvs.html#a24f81fc3cc45caa804cf611644267ca7',1,'bvhar::McmcSsvs::McmcSsvs()'],['../classbvhar_1_1McmcSsvs.html',1,'bvhar::McmcSsvs&lt; BaseMcmc &gt;']]],
  ['mcmcsv_26',['mcmcsv',['../classbvhar_1_1McmcSv.html#ac708dea35170248f46fc8374b1a15c72',1,'bvhar::McmcSv::McmcSv(const SvParams &amp;params, const SvInits &amp;inits, std::unique_ptr&lt; ShrinkageUpdater &gt; &amp;coef_prior, std::unique_ptr&lt; ShrinkageUpdater &gt; &amp;contem_prior, unsigned int seed)'],['../classbvhar_1_1McmcSv.html#a2332c13f42cc88588aa95c8b0ba112aa',1,'bvhar::McmcSv::McmcSv(const SvParams &amp;params, const SvInits &amp;inits, unsigned int seed)'],['../classbvhar_1_1McmcSv.html',1,'bvhar::McmcSv']]],
  ['mcmctriangular_27',['mcmctriangular',['../classbvhar_1_1McmcTriangular.html',1,'bvhar::McmcTriangular'],['../classbvhar_1_1McmcTriangular.html#ae75d1e9783a704d900173e9f21b07a62',1,'bvhar::McmcTriangular::McmcTriangular(const RegParams &amp;params, const RegInits &amp;inits, unsigned int seed)'],['../classbvhar_1_1McmcTriangular.html#a3fd0df48c57dda67771529db3b5731c7',1,'bvhar::McmcTriangular::McmcTriangular(const RegParams &amp;params, const RegInits &amp;inits, std::unique_ptr&lt; ShrinkageUpdater &gt; &amp;coef_prior, std::unique_ptr&lt; ShrinkageUpdater &gt; &amp;contem_prior, unsigned int seed)']]],
  ['mcmcvarforecaster_28',['mcmcvarforecaster',['../classbvhar_1_1McmcVarForecaster.html',1,'bvhar::McmcVarForecaster&lt; BaseForecaster &gt;'],['../classbvhar_1_1McmcVarForecaster.html#a19d99997b8834450e8fdb3033a754d1e',1,'bvhar::McmcVarForecaster::McmcVarForecaster(const typename std::conditional&lt; std::is_same&lt; BaseForecaster, RegForecaster &gt;::value, LdltRecords, SvRecords &gt;::type &amp;records, int step, const Eigen::MatrixXd &amp;response_mat, int lag, bool include_mean, bool filter_stable, unsigned int seed, bool sv=true)'],['../classbvhar_1_1McmcVarForecaster.html#a19d99997b8834450e8fdb3033a754d1e',1,'bvhar::McmcVarForecaster::McmcVarForecaster(const typename std::conditional&lt; std::is_same&lt; BaseForecaster, RegForecaster &gt;::value, LdltRecords, SvRecords &gt;::type &amp;records, int step, const Eigen::MatrixXd &amp;response_mat, int lag, bool include_mean, bool filter_stable, unsigned int seed, bool sv=true)']]],
  ['mcmcvarforecaster_3c_20regforecaster_20_3e_29',['McmcVarForecaster&lt; RegForecaster &gt;',['../classbvhar_1_1McmcVarForecaster.html',1,'bvhar']]],
  ['mcmcvarforecastrun_30',['mcmcvarforecastrun',['../classbvhar_1_1McmcVarforecastRun.html',1,'bvhar::McmcVarforecastRun&lt; BaseOutForecast, BaseForecaster, isGroup, isUpdate &gt;'],['../classbvhar_1_1McmcVarforecastRun.html#a42062cdfad2e29ce99746205c6d7fc0d',1,'bvhar::McmcVarforecastRun::McmcVarforecastRun(const Eigen::MatrixXd &amp;y, int lag, int num_chains, int num_iter, int num_burn, int thin, bool sparse, double level, Rcpp::List &amp;fit_record, Rcpp::List &amp;param_reg, Rcpp::List &amp;param_prior, Rcpp::List &amp;param_intercept, Rcpp::List &amp;param_init, int prior_type, const Eigen::VectorXi &amp;grp_id, const Eigen::VectorXi &amp;own_id, const Eigen::VectorXi &amp;cross_id, const Eigen::MatrixXi &amp;grp_mat, bool include_mean, bool stable, int step, const Eigen::MatrixXd &amp;y_test, bool get_lpl, const Eigen::MatrixXi &amp;seed_chain, const Eigen::VectorXi &amp;seed_forecast, bool display_progress, int nthreads, bool sv=true)'],['../classbvhar_1_1McmcVarforecastRun.html#a821de5135ea62c3bdfc6dd90282d5f41',1,'bvhar::McmcVarforecastRun::McmcVarforecastRun(const Eigen::MatrixXd &amp;y, int lag, int num_chains, int num_iter, int num_burn, int thin, bool sparse, double level, Rcpp::List &amp;fit_record, Rcpp::List &amp;param_reg, Rcpp::List &amp;param_prior, Rcpp::List &amp;param_intercept, Rcpp::List &amp;param_init, int prior_type, Rcpp::List &amp;contem_prior, Rcpp::List &amp;contem_init, int contem_prior_type, const Eigen::VectorXi &amp;grp_id, const Eigen::VectorXi &amp;own_id, const Eigen::VectorXi &amp;cross_id, const Eigen::MatrixXi &amp;grp_mat, bool include_mean, bool stable, int step, const Eigen::MatrixXd &amp;y_test, bool get_lpl, const Eigen::MatrixXi &amp;seed_chain, const Eigen::VectorXi &amp;seed_forecast, bool display_progress, int nthreads, bool sv=true)']]],
  ['mcmcvarselectforecaster_31',['mcmcvarselectforecaster',['../classbvhar_1_1McmcVarSelectForecaster.html',1,'bvhar::McmcVarSelectForecaster&lt; BaseForecaster &gt;'],['../classbvhar_1_1McmcVarSelectForecaster.html#a1dc8005deaa1c3e6dadbb0c8fc0fc4f3',1,'bvhar::McmcVarSelectForecaster::McmcVarSelectForecaster(const typename std::conditional&lt; std::is_same&lt; BaseForecaster, RegForecaster &gt;::value, LdltRecords, SvRecords &gt;::type &amp;records, double level, int step, const Eigen::MatrixXd &amp;response_mat, int lag, bool include_mean, bool filter_stable, unsigned int seed, bool sv=true)'],['../classbvhar_1_1McmcVarSelectForecaster.html#afcf021b089eee60b7acac17d3ddbd450',1,'bvhar::McmcVarSelectForecaster::McmcVarSelectForecaster(const typename std::conditional&lt; std::is_same&lt; BaseForecaster, RegForecaster &gt;::value, LdltRecords, SvRecords &gt;::type &amp;records, const Eigen::MatrixXd &amp;selection, int step, const Eigen::MatrixXd &amp;response_mat, int lag, bool include_mean, bool filter_stable, unsigned int seed, bool sv=true)'],['../classbvhar_1_1McmcVarSelectForecaster.html#a1dc8005deaa1c3e6dadbb0c8fc0fc4f3',1,'bvhar::McmcVarSelectForecaster::McmcVarSelectForecaster(const typename std::conditional&lt; std::is_same&lt; BaseForecaster, RegForecaster &gt;::value, LdltRecords, SvRecords &gt;::type &amp;records, double level, int step, const Eigen::MatrixXd &amp;response_mat, int lag, bool include_mean, bool filter_stable, unsigned int seed, bool sv=true)'],['../classbvhar_1_1McmcVarSelectForecaster.html#afcf021b089eee60b7acac17d3ddbd450',1,'bvhar::McmcVarSelectForecaster::McmcVarSelectForecaster(const typename std::conditional&lt; std::is_same&lt; BaseForecaster, RegForecaster &gt;::value, LdltRecords, SvRecords &gt;::type &amp;records, const Eigen::MatrixXd &amp;selection, int step, const Eigen::MatrixXd &amp;response_mat, int lag, bool include_mean, bool filter_stable, unsigned int seed, bool sv=true)']]],
  ['mcmcvarspillover_32',['mcmcvarspillover',['../classbvhar_1_1McmcVarSpillover.html',1,'bvhar::McmcVarSpillover&lt; RecordType &gt;'],['../classbvhar_1_1McmcVarSpillover.html#adf259f71aefbfb45462c44b00aaf3e73',1,'bvhar::McmcVarSpillover::McmcVarSpillover(RecordType &amp;records, int lag_max, int ord, int id=-1)'],['../classbvhar_1_1McmcVarSpillover.html#adf259f71aefbfb45462c44b00aaf3e73',1,'bvhar::McmcVarSpillover::McmcVarSpillover(RecordType &amp;records, int lag_max, int ord, int id=-1)']]],
  ['mcmcvharforecaster_33',['mcmcvharforecaster',['../classbvhar_1_1McmcVharForecaster.html',1,'bvhar::McmcVharForecaster&lt; BaseForecaster &gt;'],['../classbvhar_1_1McmcVharForecaster.html#ae0a16b3e637f26affe0b87d9d6969620',1,'bvhar::McmcVharForecaster::McmcVharForecaster(const typename std::conditional&lt; std::is_same&lt; BaseForecaster, RegForecaster &gt;::value, LdltRecords, SvRecords &gt;::type &amp;records, int step, const Eigen::MatrixXd &amp;response_mat, const Eigen::MatrixXd &amp;har_trans, int month, bool include_mean, bool filter_stable, unsigned int seed, bool sv=true)'],['../classbvhar_1_1McmcVharForecaster.html#ae0a16b3e637f26affe0b87d9d6969620',1,'bvhar::McmcVharForecaster::McmcVharForecaster(const typename std::conditional&lt; std::is_same&lt; BaseForecaster, RegForecaster &gt;::value, LdltRecords, SvRecords &gt;::type &amp;records, int step, const Eigen::MatrixXd &amp;response_mat, const Eigen::MatrixXd &amp;har_trans, int month, bool include_mean, bool filter_stable, unsigned int seed, bool sv=true)']]],
  ['mcmcvharforecaster_3c_20regforecaster_20_3e_34',['McmcVharForecaster&lt; RegForecaster &gt;',['../classbvhar_1_1McmcVharForecaster.html',1,'bvhar']]],
  ['mcmcvharforecastrun_35',['mcmcvharforecastrun',['../classbvhar_1_1McmcVharforecastRun.html#ad0b86827a0db74502c7ed716c1b3de84',1,'bvhar::McmcVharforecastRun::McmcVharforecastRun(const Eigen::MatrixXd &amp;y, int week, int month, int num_chains, int num_iter, int num_burn, int thin, bool sparse, double level, Rcpp::List &amp;fit_record, Rcpp::List &amp;param_reg, Rcpp::List &amp;param_prior, Rcpp::List &amp;param_intercept, Rcpp::List &amp;param_init, int prior_type, Rcpp::List &amp;contem_prior, Rcpp::List &amp;contem_init, int contem_prior_type, const Eigen::VectorXi &amp;grp_id, const Eigen::VectorXi &amp;own_id, const Eigen::VectorXi &amp;cross_id, const Eigen::MatrixXi &amp;grp_mat, bool include_mean, bool stable, int step, const Eigen::MatrixXd &amp;y_test, bool get_lpl, const Eigen::MatrixXi &amp;seed_chain, const Eigen::VectorXi &amp;seed_forecast, bool display_progress, int nthreads, bool sv=true)'],['../classbvhar_1_1McmcVharforecastRun.html#a52be5b761b09cf1ec885c67b3b4e1977',1,'bvhar::McmcVharforecastRun::McmcVharforecastRun(const Eigen::MatrixXd &amp;y, int week, int month, int num_chains, int num_iter, int num_burn, int thin, bool sparse, double level, Rcpp::List &amp;fit_record, Rcpp::List &amp;param_reg, Rcpp::List &amp;param_prior, Rcpp::List &amp;param_intercept, Rcpp::List &amp;param_init, int prior_type, const Eigen::VectorXi &amp;grp_id, const Eigen::VectorXi &amp;own_id, const Eigen::VectorXi &amp;cross_id, const Eigen::MatrixXi &amp;grp_mat, bool include_mean, bool stable, int step, const Eigen::MatrixXd &amp;y_test, bool get_lpl, const Eigen::MatrixXi &amp;seed_chain, const Eigen::VectorXi &amp;seed_forecast, bool display_progress, int nthreads, bool sv=true)'],['../classbvhar_1_1McmcVharforecastRun.html',1,'bvhar::McmcVharforecastRun&lt; BaseOutForecast, BaseForecaster, isGroup, isUpdate &gt;']]],
  ['mcmcvharselectforecaster_36',['mcmcvharselectforecaster',['../classbvhar_1_1McmcVharSelectForecaster.html',1,'bvhar::McmcVharSelectForecaster&lt; BaseForecaster &gt;'],['../classbvhar_1_1McmcVharSelectForecaster.html#a658679da36092f15a8091783ded974ee',1,'bvhar::McmcVharSelectForecaster::McmcVharSelectForecaster(const typename std::conditional&lt; std::is_same&lt; BaseForecaster, RegForecaster &gt;::value, LdltRecords, SvRecords &gt;::type &amp;records, double level, int step, const Eigen::MatrixXd &amp;response_mat, const Eigen::MatrixXd &amp;har_trans, int month, bool include_mean, bool filter_stable, unsigned int seed, bool sv=true)'],['../classbvhar_1_1McmcVharSelectForecaster.html#abfa8edbd3b1c0873a568001410896265',1,'bvhar::McmcVharSelectForecaster::McmcVharSelectForecaster(const typename std::conditional&lt; std::is_same&lt; BaseForecaster, RegForecaster &gt;::value, LdltRecords, SvRecords &gt;::type &amp;records, const Eigen::MatrixXd &amp;selection, int step, const Eigen::MatrixXd &amp;response_mat, const Eigen::MatrixXd &amp;har_trans, int month, bool include_mean, bool filter_stable, unsigned int seed, bool sv=true)'],['../classbvhar_1_1McmcVharSelectForecaster.html#a658679da36092f15a8091783ded974ee',1,'bvhar::McmcVharSelectForecaster::McmcVharSelectForecaster(const typename std::conditional&lt; std::is_same&lt; BaseForecaster, RegForecaster &gt;::value, LdltRecords, SvRecords &gt;::type &amp;records, double level, int step, const Eigen::MatrixXd &amp;response_mat, const Eigen::MatrixXd &amp;har_trans, int month, bool include_mean, bool filter_stable, unsigned int seed, bool sv=true)'],['../classbvhar_1_1McmcVharSelectForecaster.html#abfa8edbd3b1c0873a568001410896265',1,'bvhar::McmcVharSelectForecaster::McmcVharSelectForecaster(const typename std::conditional&lt; std::is_same&lt; BaseForecaster, RegForecaster &gt;::value, LdltRecords, SvRecords &gt;::type &amp;records, const Eigen::MatrixXd &amp;selection, int step, const Eigen::MatrixXd &amp;response_mat, const Eigen::MatrixXd &amp;har_trans, int month, bool include_mean, bool filter_stable, unsigned int seed, bool sv=true)']]],
  ['mcmcvharspillover_37',['mcmcvharspillover',['../classbvhar_1_1McmcVharSpillover.html#a5db3c29ed6eef9908976f2cfc57c2c34',1,'bvhar::McmcVharSpillover::McmcVharSpillover(RecordType &amp;records, int lag_max, int month, const Eigen::MatrixXd &amp;har_trans, int id=-1)'],['../classbvhar_1_1McmcVharSpillover.html#a6ad904ec24eae8b61c4e4c7ba98273f0',1,'bvhar::McmcVharSpillover::McmcVharSpillover(RecordType &amp;records, int lag_max, int week, int month, int id=-1)'],['../classbvhar_1_1McmcVharSpillover.html#a5db3c29ed6eef9908976f2cfc57c2c34',1,'bvhar::McmcVharSpillover::McmcVharSpillover(RecordType &amp;records, int lag_max, int month, const Eigen::MatrixXd &amp;har_trans, int id=-1)'],['../classbvhar_1_1McmcVharSpillover.html#a6ad904ec24eae8b61c4e4c7ba98273f0',1,'bvhar::McmcVharSpillover::McmcVharSpillover(RecordType &amp;records, int lag_max, int week, int month, int id=-1)'],['../classbvhar_1_1McmcVharSpillover.html',1,'bvhar::McmcVharSpillover&lt; RecordType &gt;']]],
  ['mhminnesota_38',['mhminnesota',['../classbvhar_1_1MhMinnesota.html',1,'bvhar::MhMinnesota'],['../classbvhar_1_1MhMinnesota.html#a8952ef9169d72d069100cd9c0df71c66',1,'bvhar::MhMinnesota::MhMinnesota()']]],
  ['mhminninits_39',['mhminninits',['../structbvhar_1_1MhMinnInits.html',1,'bvhar::MhMinnInits'],['../structbvhar_1_1MhMinnInits.html#a535377d6423c0bcedd7cc0b45d8c7ce9',1,'bvhar::MhMinnInits::MhMinnInits()']]],
  ['mhminnrecords_40',['mhminnrecords',['../structbvhar_1_1MhMinnRecords.html',1,'bvhar::MhMinnRecords'],['../structbvhar_1_1MhMinnRecords.html#ad43b501fdf9991245d8c6e36b008e19a',1,'bvhar::MhMinnRecords::MhMinnRecords()']]],
  ['mhminnspec_41',['mhminnspec',['../structbvhar_1_1MhMinnSpec.html#afe23066463b90ef1df57eec83aa0f5fa',1,'bvhar::MhMinnSpec::MhMinnSpec()'],['../structbvhar_1_1MhMinnSpec.html',1,'bvhar::MhMinnSpec']]],
  ['minnbvar_42',['minnbvar',['../classbvhar_1_1MinnBvar.html#a6e7ada1cb7566d020261cfe700138267',1,'bvhar::MinnBvar::MinnBvar()'],['../classbvhar_1_1MinnBvar.html',1,'bvhar::MinnBvar']]],
  ['minnbvhar_43',['minnbvhar',['../classbvhar_1_1MinnBvhar.html',1,'bvhar::MinnBvhar'],['../classbvhar_1_1MinnBvhar.html#a51ecf0c3e6427a8f6c81d89521590234',1,'bvhar::MinnBvhar::MinnBvhar()']]],
  ['minnbvharl_44',['minnbvharl',['../classbvhar_1_1MinnBvharL.html#a163c1d5c2e701f3fb72561503b04d6f9',1,'bvhar::MinnBvharL::MinnBvharL()'],['../classbvhar_1_1MinnBvharL.html',1,'bvhar::MinnBvharL']]],
  ['minnbvhars_45',['minnbvhars',['../classbvhar_1_1MinnBvharS.html#ae8ad1b214337aacaf8e5864d4ee762b2',1,'bvhar::MinnBvharS::MinnBvharS()'],['../classbvhar_1_1MinnBvharS.html',1,'bvhar::MinnBvharS']]],
  ['minnesota_46',['minnesota',['../classbvhar_1_1Minnesota.html#a9a4c7423354c8e5dc795bd782b5d5671',1,'bvhar::Minnesota::Minnesota()'],['../classbvhar_1_1Minnesota.html',1,'bvhar::Minnesota']]],
  ['minnesota_2eh_47',['minnesota.h',['../minnesota_8h.html',1,'']]],
  ['minnesota_5flambda_48',['minnesota_lambda',['../namespacebvhar.html#a4fe4229cf4a485926449c5ea07cb5b00',1,'bvhar']]],
  ['minnesota_5flogdens_5fscl_49',['minnesota_logdens_scl',['../namespacebvhar.html#a4f8efbfa8c4e28bf9165b513317a4120',1,'bvhar::minnesota_logdens_scl(double &amp;cand, Eigen::Ref&lt; Eigen::VectorXd &gt; coef, Eigen::Ref&lt; Eigen::VectorXd &gt; coef_mean, Eigen::Ref&lt; Eigen::VectorXd &gt; coef_prec, Eigen::VectorXi &amp;grp_vec, std::set&lt; int &gt; &amp;grp_id)'],['../namespacebvhar.html#a52e0db0ffc053a0f7f0c51f15eee80c7',1,'bvhar::minnesota_logdens_scl(double &amp;cand, Eigen::Ref&lt; Eigen::VectorXd &gt; coef, Eigen::Ref&lt; Eigen::VectorXd &gt; coef_mean, Eigen::Ref&lt; Eigen::VectorXd &gt; coef_prec, Eigen::VectorXi &amp;grp_vec, Eigen::VectorXi &amp;grp_id)']]],
  ['minnesota_5fnu_5fgriddy_50',['minnesota_nu_griddy',['../namespacebvhar.html#a347183c24d51974f9c516ed67f0cac02',1,'bvhar::minnesota_nu_griddy(double &amp;nu, int grid_size, Eigen::Ref&lt; Eigen::VectorXd &gt; coef, Eigen::Ref&lt; Eigen::VectorXd &gt; coef_mean, Eigen::Ref&lt; Eigen::VectorXd &gt; coef_prec, Eigen::VectorXi &amp;grp_vec, std::set&lt; int &gt; &amp;grp_id, boost::random::mt19937 &amp;rng)'],['../namespacebvhar.html#a9a0207d20299831e3d4984a48b1f6179',1,'bvhar::minnesota_nu_griddy(double &amp;nu, int grid_size, Eigen::Ref&lt; Eigen::VectorXd &gt; coef, Eigen::Ref&lt; Eigen::VectorXd &gt; coef_mean, Eigen::Ref&lt; Eigen::VectorXd &gt; coef_prec, Eigen::VectorXi &amp;grp_vec, Eigen::VectorXi &amp;grp_id, boost::random::mt19937 &amp;rng)']]],
  ['minnfit_51',['minnfit',['../structbvhar_1_1MinnFit.html',1,'bvhar::MinnFit'],['../structbvhar_1_1MinnFit.html#af1d6148d9f7c448f7710f1c4c025cdd1',1,'bvhar::MinnFit::MinnFit()']]],
  ['minnflat_52',['minnflat',['../classbvhar_1_1MinnFlat.html',1,'bvhar::MinnFlat'],['../classbvhar_1_1MinnFlat.html#aa07d35d2812f2631b38aaff9f5873228',1,'bvhar::MinnFlat::MinnFlat()']]],
  ['minnforecaster_53',['minnforecaster',['../classbvhar_1_1MinnForecaster.html#a448777a2b3964c293a9c76b7ded2aff5',1,'bvhar::MinnForecaster::MinnForecaster()'],['../classbvhar_1_1MinnForecaster.html',1,'bvhar::MinnForecaster']]],
  ['minnparams_54',['minnparams',['../structbvhar_1_1MinnParams.html#a36ecb65d78f3d81dcc4155f6fcdf4f42',1,'bvhar::MinnParams::MinnParams(Rcpp::List &amp;priors)'],['../structbvhar_1_1MinnParams.html#af8ba71324ee153aa74438337a2bfe25c',1,'bvhar::MinnParams::MinnParams(Rcpp::List &amp;priors, int num_lowerchol)'],['../structbvhar_1_1MinnParams.html#ae1bda7b2ecf1c10d5b71730f0aea60f3',1,'bvhar::MinnParams::MinnParams(int num_iter, const Eigen::MatrixXd &amp;x, const Eigen::MatrixXd &amp;y, Rcpp::List &amp;reg_spec, const Eigen::VectorXi &amp;own_id, const Eigen::VectorXi &amp;cross_id, const Eigen::VectorXi &amp;grp_id, const Eigen::MatrixXi &amp;grp_mat, Rcpp::List &amp;priors, Rcpp::List &amp;intercept, bool include_mean)'],['../structbvhar_1_1MinnParams.html',1,'bvhar::MinnParams&lt; BaseRegParams &gt;']]],
  ['minnrecords_55',['minnrecords',['../structbvhar_1_1MinnRecords.html#a84b663cc360881c61c0908cd6de22c74',1,'bvhar::MinnRecords::MinnRecords()'],['../structbvhar_1_1MinnRecords.html',1,'bvhar::MinnRecords'],['../structbvhar_1_1MinnRecords.html#ab059d52ec1597a71ba2eebd11d417b0a',1,'bvhar::MinnRecords::MinnRecords()']]],
  ['minnreg_56',['MinnReg',['../namespacebvhar.html#a83812666ee1a006517dd71709d969760',1,'bvhar']]],
  ['minnspec_57',['minnspec',['../structbvhar_1_1MinnSpec.html',1,'bvhar::MinnSpec'],['../structbvhar_1_1MinnSpec.html#a9b609c9883678756e26d04676567680c',1,'bvhar::MinnSpec::MinnSpec()']]],
  ['minnspillover_58',['minnspillover',['../classbvhar_1_1MinnSpillover.html#a8a6be933a9b1a4d91adf6cdeba6f6dda',1,'bvhar::MinnSpillover::MinnSpillover()'],['../classbvhar_1_1MinnSpillover.html',1,'bvhar::MinnSpillover']]],
  ['minnsv_59',['MinnSv',['../namespacebvhar.html#a7b6c5e1fffde86dedb50c4d007c7764e',1,'bvhar']]],
  ['minnupdater_60',['minnupdater',['../classbvhar_1_1MinnUpdater.html#aa42dd82c624f6b8ddc253d772696dc47',1,'bvhar::MinnUpdater::MinnUpdater()'],['../classbvhar_1_1MinnUpdater.html',1,'bvhar::MinnUpdater']]],
  ['mn_5fscl_61',['mn_scl',['../classbvhar_1_1MinnForecaster.html#afef03ea66814635abd9d3f0a995262df',1,'bvhar::MinnForecaster']]],
  ['model_62',['model',['../classbvhar_1_1DynamicLdltSpillover.html#ad23dabf1918474bb356e45fc20346a25',1,'bvhar::DynamicLdltSpillover::model'],['../classbvhar_1_1McmcOutforecastRun.html#a62156fabc2d9c90702f7a5e50f4d19a2',1,'bvhar::McmcOutforecastRun::model']]],
  ['month_63',['month',['../classbvhar_1_1OlsVhar.html#a7116fa9c209256d49c3d2825fd23671b',1,'bvhar::OlsVhar::month'],['../classbvhar_1_1MinnBvhar.html#af70379674140c202ddbdb1898cf06fde',1,'bvhar::MinnBvhar::month']]],
  ['mtx_64',['mtx',['../classbvhar_1_1McmcAlgo.html#a1d886396387a7fa41432409d390752fe',1,'bvhar::McmcAlgo::mtx'],['../classbvhar_1_1McmcForecaster.html#a80c80209d71d28fc10f7fa7dec7b2df7',1,'bvhar::McmcForecaster::mtx']]],
  ['multiols_65',['multiols',['../classbvhar_1_1MultiOls.html#ad931be12d80424d8b84fdc002a98ef04',1,'bvhar::MultiOls::MultiOls()'],['../classbvhar_1_1MultiOls.html',1,'bvhar::MultiOls']]]
];
